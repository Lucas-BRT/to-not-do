name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  create:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: Build
      run: cargo build --release --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Get binary name from Cargo.toml
      id: binary_name
      run: |
        # Extraindo o nome do binário diretamente do Cargo.toml
        BINARY_NAME=$(grep -oP '^name\s*=\s*"\K[^"]+' Cargo.toml)
        echo "Binary name is: $BINARY_NAME"
        echo "binary_name=$BINARY_NAME" >> $GITHUB_ENV  # Define como variável de ambiente

    - name: Create Release Draft
      if: startsWith(github.ref, 'refs/tags/v') 
      run: |
        # Pega a tag (versão) do GitHub
        TAG_NAME=${GITHUB_REF#refs/tags/}
        
        # Cria um release draft
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"tag_name": "'"$TAG_NAME"'","name": "'"$TAG_NAME"'","body": "Release draft para v'"$TAG_NAME"'","draft": true}' \
          https://api.github.com/repos/${{ github.repository }}/releases

    - name: Upload Release Assets
      if: startsWith(github.ref, 'refs/tags/v')  
      uses: softprops/action-gh-release@v1
      with:
        files: target/release/${{ env.binary_name }} 
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
